// Firebase Security Rules for Firestore
// Copy these rules to your Firebase Console -> Firestore Database -> Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admin emails for reference
    function isAdmin() {
      return request.auth != null && 
             (request.auth.token.email == 'aenreddy.souchithreddy@gmail.com' ||
              request.auth.token.email == 'samhithbade44@gmail.com' ||
              request.auth.token.email == 'siddharthpaladugula@gmail.com');
    }
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user is approved
    function isApprovedUser() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/approvedUsers/$(request.auth.uid));
    }
    
    // Issues collection - readable by authenticated users, writable by approved users
    match /issues/{document} {
      allow read: if isAuthenticated();
      allow write: if isApprovedUser() || isAdmin();
    }
    
    // Approval requests - admin only
    match /approvalRequests/{document} {
      allow read, write: if isAdmin();
      allow create: if isAuthenticated();
    }
    
    // Contractor requests - admin only  
    match /contractorRequests/{document} {
      allow read, write: if isAdmin();
      allow create: if isAuthenticated();
    }
    
    // Approved users - admin manages, users can read their own
    match /approvedUsers/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin();
    }
    
    // Pending approvals - admin manages, users can read their own
    match /pendingApprovals/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Contractor approvals - admin manages, contractors can read their own
    match /contractorApprovals/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
